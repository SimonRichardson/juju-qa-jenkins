- job:
    name: "github-mgo-check-jobs"
    project-type: "multijob"
    description: "Run the various checks for landing from GitHub PRs"
    concurrent: false
    node: noop-parent-jobs
    wrappers:
      - ansicolor
      - workspace-cleanup
      - timestamps
      - timeout:
          timeout: 60
          fail: true
          type: absolute
    parameters:
      - string:
          default: ""
          description: "Enable sub job to be run individually."
          name: SHORT_GIT_COMMIT
    properties:
      - github:
          url: https://github.com/juju/mgo/
      - authorization:
          anonymous:
            - job-read
    triggers:
      - github-pull-request:
          github-hooks: true
          trigger-phrase: "/build"
          status-context: "check-multi-mgo"
          only-trigger-phrase: false
          auto-close-on-fail: false
          cancel-builds-on-update: true # Cancel existing builds if PR updated/re-run.
          cron: "H/5 * * * *"
          org-list:
            - juju
          allow-whitelist-orgs-as-admins: true
          black-list-labels:
            - "no-test-run"
          black-list-target-branches:
            - feature-.*
    builders:
      - resolve-merge-commit
      - detect-merge-go-version
      - multijob:
          name: github-mgo-check-jobs
          projects:
            - name: github-make-check-mgo
              current-parameters: true
              predefined-parameters: |-
                GOVERSION=${{GOVERSION}}
                MERGE_COMMIT=${{MERGE_COMMIT}}

- job:
    name: github-make-check-mgo
    description: |-
      Run test suite against PR
    node: ephemeral-github-16c-64g-amd64
    concurrent: true
    parameters:
      - string:
          default: ""
          description: "Pseudo merge commit for this PR check run"
          name: MERGE_COMMIT
      - string:
          default: ""
          description: "Specify the OS Series to run on"
          name: CONTAINER_SERIES
      - string:
          default: ""
          description: "Go version used for build."
          name: GOVERSION
    properties:
      - authorization:
          anonymous:
            - job-read
    wrappers:
      - ansicolor
      - workspace-cleanup
      - timestamps
      - timeout:
          timeout: 60
          fail: true
          type: absolute
    builders:
      - common
      - set-check-description
      - install-go
      - install-mongo4.4
      - inject:
          properties-content: |-
            PROJECT_DIR="github.com/juju/mgo"
      - run-build-check-raw:
          build_env: ""
          setup_steps: ""
          src_command: !include-raw-verbatim: "./scripts/snippet_build_check-juju-mgo.sh"
          checkout_command: !include-raw-verbatim: "./scripts/checkout.sh"
          test_command: !include-raw-verbatim: "./scripts/snippet_clean-test-exit.sh"
    publishers:
      - junit:
          results: tests.xml
          allow-empty-results: true

- job:
    name: "github-mgo-merge-jobs"
    project-type: "multijob"
    description: "On request, run pre-commit checks, and then merge changes for mgo merge jobs"
    concurrent: true
    node: noop-parent-jobs
    wrappers:
      - ansicolor
      - workspace-cleanup
      - timestamps
      - timeout:
          timeout: 60
          fail: true
          type: absolute
    parameters:
      - string:
          default: ""
          description: "Enable sub job to be run individually."
          name: SHORT_GIT_COMMIT
    properties:
      - github:
          url: https://github.com/juju/mgo/
      - authorization:
          anonymous:
            - job-read
    triggers:
      - github-pull-request:
          github-hooks: true
          trigger-phrase: "/merge"
          status-context: "merge-multi-mgo"
          only-trigger-phrase: true
          auto-close-on-fail: false
          cron: "H/5 * * * *"
          org-list:
            - juju
          allow-whitelist-orgs-as-admins: true
          black-list-target-branches:
            - feature-.*
    builders:
      - shell: |-
          #!/bin/bash
          # Sanatise the PR description for merge commit message.
          cat >prdesc <<EOT
              pr_descr=$(echo ${{ghprbPullLongDescription}} | sed $'s/\\r\\n/ \\\\\\n/g')
          EOT
      - inject:
          properties-file: ${{WORKSPACE}}/prdesc
      - resolve-merge-commit
      - detect-merge-go-version
      - multijob:
          name: github-mgo-merge-jobs
          projects:
            - name: github-make-check-mgo
              current-parameters: true
              predefined-parameters: |-
                GOVERSION=${{GOVERSION}}
                MERGE_COMMIT=${{MERGE_COMMIT}}
    publishers:
      - junit:
          results: tests.xml
          allow-empty-results: true
      - github-pull-request-merge:
          only-admins-merge: true
          fail-on-non-merge: true
          merge-comment: |-
            $ghprbPullLink

            $pr_descr
