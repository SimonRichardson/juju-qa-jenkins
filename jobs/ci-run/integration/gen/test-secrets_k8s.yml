

# Code generated by gen-wire-tests. DO NOT EDIT.
- job:
    name: 'test-secrets_k8s-multijob'
    project-type: 'multijob'
    description: |-
        Test secrets_k8s Suite
    condition: SUCCESSFUL
    node: noop-parent-jobs
    concurrent: true
    wrappers:
    - ansicolor
    - workspace-cleanup
    - timestamps
    parameters:
    - string:
        default: ''
        description: 'Enable sub job to be run individually.'
        name: SHORT_GIT_COMMIT
    - string:
        default: ''
        description: 'Build arch used to download the build tar.gz.'
        name: BUILD_ARCH
    - string:
        default: ''
        description: 'Ubuntu series to use when bootstrapping Juju'
        name: BOOTSTRAP_SERIES
    builders:
    - get-build-details
    - set-test-description
    - multijob:
        name: 'IntegrationTests-secrets_k8s'
        projects:
        - name: 'test-secrets_k8s-test-secret-drain-microk8s'
          current-parameters: true
        - name: 'test-secrets_k8s-test-secrets-microk8s'
          current-parameters: true
        - name: 'test-secrets_k8s-test-user-secret-drain-microk8s'
          current-parameters: true
        - name: 'test-secrets_k8s-test-user-secrets-microk8s'
          current-parameters: true

- job:
    name: test-secrets_k8s-test-secret-drain-microk8s
    node: ephemeral-noble-8c-32g-amd64
    concurrent: true
    description: |-
      Test test_secret_drain in secrets_k8s suite on microk8s
    parameters:
    - validating-string:
        name: SHORT_GIT_COMMIT
        description: 'Enable sub job to be run individually.'
        regex: ^\S{{7}}$
        msg: Enter a valid 7 char git sha
    - choice:
        default: 'amd64'
        description: 'Build arch used to download the build tar.gz.'
        name: BUILD_ARCH
        choices:
        - amd64
        - arm64
        - s390x
        - ppc64el
    - choice:
        default: ''
        description: 'Arch used to boostrap controller.'
        name: BOOTSTRAP_ARCH
        choices:
        - amd64
        - arm64
        - s390x
        - ppc64el
    - choice:
        default: ''
        description: 'Arch used for hosted models.'
        name: MODEL_ARCH
        choices:
        - amd64
        - arm64
        - s390x
        - ppc64el
    - string:
        default: 'microk8s'
        description: 'Cloud to use when bootstrapping Juju'
        name: BOOTSTRAP_CLOUD
    - string:
        default: 'k8s'
        description: 'Provider to use when bootstrapping Juju'
        name: BOOTSTRAP_PROVIDER
    - string:
        default: ''
        description: 'Ubuntu series to use when bootstrapping Juju'
        name: BOOTSTRAP_SERIES
    wrappers:
      - default-integration-test-wrapper
      - timeout:
          timeout: 30
          fail: true
          type: absolute
    builders:
      - select-oci-registry
      - wait-for-cloud-init
      - prepare-integration-test
      - conditional-step:
          # Only run on regexp version match.
          # Accounts for tests which do not exist
          # until a given Juju version.
          condition-kind: regex-match
          regex: "^[4-9].*|^3\\.([2-9]|\\d{{2,}})(\\.|-).*"
          label: "${{JUJU_VERSION}}"
          on-evaluation-failure: "dont-run"
          steps:
            - run-integration-test-microk8s:
                  test_name: 'secrets_k8s'
                  setup_steps: ''
                  task_name: 'test_secret_drain'
                  skip_tasks: 'test_secrets,test_user_secret_drain,test_user_secrets'
    publishers:
      - integration-artifacts

- job:
    name: test-secrets_k8s-test-secrets-microk8s
    node: ephemeral-noble-8c-32g-amd64
    concurrent: true
    description: |-
      Test test_secrets in secrets_k8s suite on microk8s
    parameters:
    - validating-string:
        name: SHORT_GIT_COMMIT
        description: 'Enable sub job to be run individually.'
        regex: ^\S{{7}}$
        msg: Enter a valid 7 char git sha
    - choice:
        default: 'amd64'
        description: 'Build arch used to download the build tar.gz.'
        name: BUILD_ARCH
        choices:
        - amd64
        - arm64
        - s390x
        - ppc64el
    - choice:
        default: ''
        description: 'Arch used to boostrap controller.'
        name: BOOTSTRAP_ARCH
        choices:
        - amd64
        - arm64
        - s390x
        - ppc64el
    - choice:
        default: ''
        description: 'Arch used for hosted models.'
        name: MODEL_ARCH
        choices:
        - amd64
        - arm64
        - s390x
        - ppc64el
    - string:
        default: 'microk8s'
        description: 'Cloud to use when bootstrapping Juju'
        name: BOOTSTRAP_CLOUD
    - string:
        default: 'k8s'
        description: 'Provider to use when bootstrapping Juju'
        name: BOOTSTRAP_PROVIDER
    - string:
        default: ''
        description: 'Ubuntu series to use when bootstrapping Juju'
        name: BOOTSTRAP_SERIES
    wrappers:
      - default-integration-test-wrapper
      - timeout:
          timeout: 30
          fail: true
          type: absolute
    builders:
      - select-oci-registry
      - wait-for-cloud-init
      - prepare-integration-test
      - conditional-step:
          # Only run on regexp version match.
          # Accounts for tests which do not exist
          # until a given Juju version.
          condition-kind: regex-match
          regex: "^[4-9].*|^3\\.([1-9]|\\d{{2,}})(\\.|-).*"
          label: "${{JUJU_VERSION}}"
          on-evaluation-failure: "dont-run"
          steps:
            - run-integration-test-microk8s:
                  test_name: 'secrets_k8s'
                  setup_steps: ''
                  task_name: 'test_secrets'
                  skip_tasks: 'test_secret_drain,test_user_secret_drain,test_user_secrets'
    publishers:
      - integration-artifacts

- job:
    name: test-secrets_k8s-test-user-secret-drain-microk8s
    node: ephemeral-noble-8c-32g-amd64
    concurrent: true
    description: |-
      Test test_user_secret_drain in secrets_k8s suite on microk8s
    parameters:
    - validating-string:
        name: SHORT_GIT_COMMIT
        description: 'Enable sub job to be run individually.'
        regex: ^\S{{7}}$
        msg: Enter a valid 7 char git sha
    - choice:
        default: 'amd64'
        description: 'Build arch used to download the build tar.gz.'
        name: BUILD_ARCH
        choices:
        - amd64
        - arm64
        - s390x
        - ppc64el
    - choice:
        default: ''
        description: 'Arch used to boostrap controller.'
        name: BOOTSTRAP_ARCH
        choices:
        - amd64
        - arm64
        - s390x
        - ppc64el
    - choice:
        default: ''
        description: 'Arch used for hosted models.'
        name: MODEL_ARCH
        choices:
        - amd64
        - arm64
        - s390x
        - ppc64el
    - string:
        default: 'microk8s'
        description: 'Cloud to use when bootstrapping Juju'
        name: BOOTSTRAP_CLOUD
    - string:
        default: 'k8s'
        description: 'Provider to use when bootstrapping Juju'
        name: BOOTSTRAP_PROVIDER
    - string:
        default: ''
        description: 'Ubuntu series to use when bootstrapping Juju'
        name: BOOTSTRAP_SERIES
    wrappers:
      - default-integration-test-wrapper
      - timeout:
          timeout: 30
          fail: true
          type: absolute
    builders:
      - select-oci-registry
      - wait-for-cloud-init
      - prepare-integration-test
      - conditional-step:
          # Only run on regexp version match.
          # Accounts for tests which do not exist
          # until a given Juju version.
          condition-kind: regex-match
          regex: "^[4-9].*|^3\\.([3-9]|\\d{{2,}})(\\.|-).*"
          label: "${{JUJU_VERSION}}"
          on-evaluation-failure: "dont-run"
          steps:
            - run-integration-test-microk8s:
                  test_name: 'secrets_k8s'
                  setup_steps: ''
                  task_name: 'test_user_secret_drain'
                  skip_tasks: 'test_secret_drain,test_secrets,test_user_secrets'
    publishers:
      - integration-artifacts

- job:
    name: test-secrets_k8s-test-user-secrets-microk8s
    node: ephemeral-noble-8c-32g-amd64
    concurrent: true
    description: |-
      Test test_user_secrets in secrets_k8s suite on microk8s
    parameters:
    - validating-string:
        name: SHORT_GIT_COMMIT
        description: 'Enable sub job to be run individually.'
        regex: ^\S{{7}}$
        msg: Enter a valid 7 char git sha
    - choice:
        default: 'amd64'
        description: 'Build arch used to download the build tar.gz.'
        name: BUILD_ARCH
        choices:
        - amd64
        - arm64
        - s390x
        - ppc64el
    - choice:
        default: ''
        description: 'Arch used to boostrap controller.'
        name: BOOTSTRAP_ARCH
        choices:
        - amd64
        - arm64
        - s390x
        - ppc64el
    - choice:
        default: ''
        description: 'Arch used for hosted models.'
        name: MODEL_ARCH
        choices:
        - amd64
        - arm64
        - s390x
        - ppc64el
    - string:
        default: 'microk8s'
        description: 'Cloud to use when bootstrapping Juju'
        name: BOOTSTRAP_CLOUD
    - string:
        default: 'k8s'
        description: 'Provider to use when bootstrapping Juju'
        name: BOOTSTRAP_PROVIDER
    - string:
        default: ''
        description: 'Ubuntu series to use when bootstrapping Juju'
        name: BOOTSTRAP_SERIES
    wrappers:
      - default-integration-test-wrapper
      - timeout:
          timeout: 30
          fail: true
          type: absolute
    builders:
      - select-oci-registry
      - wait-for-cloud-init
      - prepare-integration-test
      - conditional-step:
          # Only run on regexp version match.
          # Accounts for tests which do not exist
          # until a given Juju version.
          condition-kind: regex-match
          regex: "^[4-9].*|^3\\.([3-9]|\\d{{2,}})(\\.|-).*"
          label: "${{JUJU_VERSION}}"
          on-evaluation-failure: "dont-run"
          steps:
            - run-integration-test-microk8s:
                  test_name: 'secrets_k8s'
                  setup_steps: ''
                  task_name: 'test_user_secrets'
                  skip_tasks: 'test_secret_drain,test_secrets,test_user_secret_drain'
    publishers:
      - integration-artifacts
