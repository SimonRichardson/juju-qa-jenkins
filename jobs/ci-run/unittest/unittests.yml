- job:
    name: 'unit-tests'
    project-type: 'multijob'
    description: 'Run unit tests for a Juju commit'
    condition: SUCCESSFUL
    node: noop-parent-jobs
    wrappers:
      - ansicolor
      - workspace-cleanup
      - timestamps
    parameters:
    - string:
        default: ""
        description: "Enable sub job to be run individually."
        name: SHORT_GIT_COMMIT
    builders:
      - get-s3-build-details
      - set-test-description
      - multijob:
            name: UnitTests
            projects:
              - name: unit-tests-amd64
                current-parameters: true
              - name: unit-tests-arm64
                current-parameters: true
              - name: unit-tests-race-amd64
                current-parameters: true
              - name: unit-tests-race-arm64
                current-parameters: true
# These unit tests are comment out here as they are currently unable to be run
# due to our Jenkins setup. They will eventually me added back in with our
# final Jenkins install (tlm 21/04/2022)
#             - name: unit-tests-s390x
#               current-parameters: true
#             - name: unit-tests-ppc64el
#               current-parameters: true
#               current-parameters: true

- builder:
    # Takes parameter: GOTEST_TYPE. 'race' for go test race, 'xunit-report' for
    # make test w/ verbose and generating an xml report and anything else for
    # straight 'make test'
    name: 'run-unit-tests-host'
    builders:
    - host-src-command:
          src_command:
              !include-raw-expand: ../scripts/snippet_run-unit-tests.template.sh


- job:
    name: unit-tests-amd64
    node: ephemeral-noble-16c-64g-amd64
    description: |-
      Build and run unit tests for amd64.
    wrappers:
      - default-unit-test-wrapper
    parameters:
    - string:
        default: ""
        description: "Enable sub job to be run individually."
        name: SHORT_GIT_COMMIT
    - string:
        default: '2400s'
        name: TEST_TIMEOUT
    - string:
        name: USE_TMPFS_FOR_MGO
        description: "Set to 1 to use a tmpfs volume for hosting mongo data"
    builders:
      - wait-for-cloud-init
      - install-common-tools
      - apt-install:
          packages: gcc squashfuse
      - get-s3-source-payload
      - setup-go-environment
      - go-install:
          modules: github.com/tebeka/go2xunit@latest
      - description-setter:
          description: "${{JUJU_VERSION}} ${{SHORT_GIT_COMMIT}}"
      # Need to populate with which arch we're building for.
      - run-unit-tests-host:
          GOTEST_TYPE: "xunit-report"
          TEST_TIMEOUT: "${{TEST_TIMEOUT}}"
          USE_TMPFS_FOR_MGO: "${{USE_TMPFS_FOR_MGO}}"
          FUZZ_CHECK: 1
    publishers:
      - junit:
          results: tests.xml
          allow-empty-results: true

- job:
    name: 'unit-tests-arm64'
    node: ephemeral-noble-16c-64g-arm64
    description: |-
      Build and run unit tests for arm64.
    wrappers:
      - default-unit-test-wrapper
    parameters:
    - string:
        default: ""
        description: "Enable sub job to be run individually."
        name: SHORT_GIT_COMMIT
    - string:
        default: '5400s'
        name: TEST_TIMEOUT
    - string:
        name: USE_TMPFS_FOR_MGO
        description: "Set to 1 to use a tmpfs volume for hosting mongo data"
    builders:
      - wait-for-cloud-init
      - install-common-tools
      - apt-install:
          packages: gcc squashfuse
      - get-s3-source-payload
      - setup-go-environment
      - go-install:
          modules: github.com/tebeka/go2xunit@latest
      - description-setter:
          description: "${{JUJU_VERSION}} ${{SHORT_GIT_COMMIT}}"
      # Need to populate with which arch we're building for.
      - run-unit-tests-host:
          GOTEST_TYPE: "xunit-report"
          TEST_TIMEOUT: "${{TEST_TIMEOUT}}"
          USE_TMPFS_FOR_MGO: "${{USE_TMPFS_FOR_MGO}}"
          FUZZ_CHECK: 0
    publishers:
      - junit:
          results: tests.xml
          allow-empty-results: true

- job:
    name: unit-tests-s390x
    description: |-
      Build and run unit tests for s390x in an lxd container.
    node: s390x
    wrappers:
      - default-unit-test-wrapper
    parameters:
    - string:
        default: ""
        description: "Enable sub job to be run individually."
        name: SHORT_GIT_COMMIT
    - string:
        default: '5400s'
        name: TEST_TIMEOUT
    - string:
        name: USE_TMPFS_FOR_MGO
        description: "Set to 1 to use a tmpfs volume for hosting mongo data"
    builders:
      - wait-for-cloud-init
      - install-common-tools
      - apt-install:
          packages: gcc squashfuse
      - get-s3-source-payload
      - setup-go-environment
      - go-install:
          modules: github.com/tebeka/go2xunit@latest
      - description-setter:
          description: "${{JUJU_VERSION}} ${{SHORT_GIT_COMMIT}}"
      # Need to populate with which arch we're building for.
      - run-unit-tests-host:
          GOTEST_TYPE: "xunit-report"
          TEST_TIMEOUT: "${{TEST_TIMEOUT}}"
          USE_TMPFS_FOR_MGO: "${{USE_TMPFS_FOR_MGO}}"
          FUZZ_CHECK: 0
    publishers:
      - junit:
          results: tests.xml
          allow-empty-results: true

- job:
    name: unit-tests-ppc64el
    description: |-
      Build and run unit tests for ppc64el.
    node: ppc64el
    wrappers:
      - default-unit-test-wrapper
    parameters:
    - string:
        default: ""
        description: "Enable sub job to be run individually."
        name: SHORT_GIT_COMMIT
    - string:
        default: '5400s'
        name: TEST_TIMEOUT
    - string:
        name: USE_TMPFS_FOR_MGO
      # TODO(achilleasa): force tmpfs for ppc64el as it's the only one that
      # struggles with timeouts due to the use of wiretiger on slow hw. Once
      # we are happy with this, we can set the flag to 1 for the root job.
        default: "1"
        description: "Set to 1 to use a tmpfs volume for hosting mongo data"
    builders:
      - wait-for-cloud-init
      - install-common-tools
      - apt-install:
          packages: gcc squashfuse
      - get-s3-source-payload
      - setup-go-environment
      - go-install:
          modules: github.com/tebeka/go2xunit@latest
      - description-setter:
          description: "${{JUJU_VERSION}} ${{SHORT_GIT_COMMIT}}"
      # Need to populate with which arch we're building for.
      - run-unit-tests-host:
          GOTEST_TYPE: "xunit-report"
          TEST_TIMEOUT: "${{TEST_TIMEOUT}}"
          USE_TMPFS_FOR_MGO: "${{USE_TMPFS_FOR_MGO}}"
          FUZZ_CHECK: 0
    publishers:
      - junit:
          results: tests.xml
          allow-empty-results: true


- job:
    name: 'unit-tests-race-amd64'
    node: ephemeral-noble-16c-64g-amd64
    description: |-
      Build and run unit race tests for amd64.
    wrappers:
      - default-unit-test-wrapper
    parameters:
    - string:
        default: ""
        description: "Enable sub job to be run individually."
        name: SHORT_GIT_COMMIT
    - string:
        default: '5400s'
        name: TEST_TIMEOUT
    - string:
        name: USE_TMPFS_FOR_MGO
        description: "Set to 1 to use a tmpfs volume for hosting mongo data"
    builders:
      - wait-for-cloud-init
      - install-common-tools
      - apt-install:
          packages: gcc squashfuse
      - get-s3-source-payload
      - setup-go-environment
      - go-install:
          modules: github.com/tebeka/go2xunit@latest
      - description-setter:
          description: "${{JUJU_VERSION}} ${{SHORT_GIT_COMMIT}}"
      # Need to populate with which arch we're building for.
      - run-unit-tests-host:
          GOTEST_TYPE: "race"
          TEST_TIMEOUT: "${{TEST_TIMEOUT}}"
          USE_TMPFS_FOR_MGO: "${{USE_TMPFS_FOR_MGO}}"
          FUZZ_CHECK: 0
    publishers:
        - junit:
            results: tests.xml
            allow-empty-results: true

- job:
    name: 'unit-tests-race-arm64'
    node: ephemeral-noble-16c-64g-arm64
    description: |-
      Build and run unit race tests for arm64.
    wrappers:
      - default-unit-test-wrapper
    parameters:
    - string:
        default: ""
        description: "Enable sub job to be run individually."
        name: SHORT_GIT_COMMIT
    - string:
        default: '5400s'
        name: TEST_TIMEOUT
    - string:
        name: USE_TMPFS_FOR_MGO
        description: "Set to 1 to use a tmpfs volume for hosting mongo data"
    builders:
      - wait-for-cloud-init
      - install-common-tools
      - apt-install:
          packages: gcc squashfuse
      - get-s3-source-payload
      - setup-go-environment
      - go-install:
          modules: github.com/tebeka/go2xunit@latest
      - description-setter:
          description: "${{JUJU_VERSION}} ${{SHORT_GIT_COMMIT}}"
      # Need to populate with which arch we're building for.
      - run-unit-tests-host:
          GOTEST_TYPE: "race"
          TEST_TIMEOUT: "${{TEST_TIMEOUT}}"
          USE_TMPFS_FOR_MGO: "${{USE_TMPFS_FOR_MGO}}"
          FUZZ_CHECK: 0
    publishers:
        - junit:
            results: tests.xml
            allow-empty-results: true

- wrapper:
    name: default-unit-test-wrapper
    wrappers:
      - ansicolor
      - timestamps
      - workspace-cleanup
      - cirun-test-stuck-timeout
